// <auto-generated />
using System;
using EF_Lab3_Solution;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Lab3_Solution.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521130040_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Lab3_Solution.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_Lab3_Solution.School", b =>
                {
                    b.Property<int>("SchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("EF_Lab3_Solution.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthOfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("QualificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SchoolID")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.HasIndex("SchoolID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EF_Lab3_Solution.TeacherTranfere", b =>
                {
                    b.Property<int>("TeacherTranfereID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherTranfereID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromSchoolID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<int>("ToSchoolID")
                        .HasColumnType("int");

                    b.HasKey("TeacherTranfereID");

                    b.HasIndex("FromSchoolID");

                    b.HasIndex("TeacherID");

                    b.HasIndex("ToSchoolID");

                    b.ToTable("TeacherTranferes");
                });

            modelBuilder.Entity("EF_Lab3_Solution.School", b =>
                {
                    b.HasOne("EF_Lab3_Solution.Department", "Department")
                        .WithMany("Schools")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EF_Lab3_Solution.Teacher", b =>
                {
                    b.HasOne("EF_Lab3_Solution.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("EF_Lab3_Solution.TeacherTranfere", b =>
                {
                    b.HasOne("EF_Lab3_Solution.School", "FromSchool")
                        .WithMany("TeacherTranfereForm")
                        .HasForeignKey("FromSchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EF_Lab3_Solution.Teacher", "Teacher")
                        .WithMany("TeacherTranferes")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Lab3_Solution.School", "ToSchool")
                        .WithMany("TeacherTranfereTo")
                        .HasForeignKey("ToSchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromSchool");

                    b.Navigation("Teacher");

                    b.Navigation("ToSchool");
                });

            modelBuilder.Entity("EF_Lab3_Solution.Department", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("EF_Lab3_Solution.School", b =>
                {
                    b.Navigation("TeacherTranfereForm");

                    b.Navigation("TeacherTranfereTo");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EF_Lab3_Solution.Teacher", b =>
                {
                    b.Navigation("TeacherTranferes");
                });
#pragma warning restore 612, 618
        }
    }
}
